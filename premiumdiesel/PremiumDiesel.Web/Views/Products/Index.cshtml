@model IEnumerable<PremiumDiesel.Model.DTOs.ProductDTO>

@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>
<hr />
<div class="table-responsive">
    <table id="productsTable" class="table table-striped table-hover ">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.Notes)
                    </th>*@
                <th class="alwaysShow">&nbsp;</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => product.Name)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.Notes)
                        </td>*@
                    <td class="text-right alwaysShow">
                        @using PremiumDiesel.Web.HtmlHelperExtensions

                        @Ajax.FaViewLinkButton("Details", "Products", product.Id)
                        @Ajax.FaEditLinkButton("Edit", "Products", product.Id)
                        @Ajax.FaDeleteLinkButton(product.Id)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.ToList().Count == 0)
{
    <div class="alert alert-dismissible alert-warning">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <h4>Warning!</h4>
        <p>No products yet.</p>
    </div>
}

@using PremiumDiesel.Model.Constants;

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#productsTable').DataTable(@*{
                ajax: {
                    url: '@Api.Products.Delete',
                    dataSrc: '',
                },
                columns: [
                    {
                        data: 'name',
                        render: function (data, type, product) {
                            var nameLink = @Html.ActionLink("productName", "Edit", new { id = "productId" }, null);
                            nameLink = nameLink.replace('productName', product.name);
                            nameLink = nameLink.replace('productId', product.id);
                            return nameLink;
                        }
                    },
                    {
                        data: 'notes',
                    },
                    {
                        data: 'actions',
                        render: function (data, type, product) {
                            var viewLinkButton = @Html.ActionLink("<span class='fa fa - eye'>", "Details", new { id = "productId" }, null);
                            viewLinkButton = viewLinkButton.replace('productName', product.name);
                            viewLinkButton = viewLinkButton.replace('productId', product.id);
                            return viewLinkButton;
                        }
                    }
                ]
            }*@);

            $('#productsTable').on('click', '.js-delete', function () {
                var button = $(this);
                var productId = button.attr('primaryKey');

                bootbox.confirm('Are you sure you wish to delete this product?', function(result) {
                    if (result) {
                        $.ajax({
                            url: '@Api.Products.Delete' + productId,
                            method: "DELETE",
                            success: function () {
                                button.parents('tr').remove();
                            }
                        });
                    }
                });

            });
        });
    </script>
}